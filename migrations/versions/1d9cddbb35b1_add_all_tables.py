"""Add all tables

Revision ID: 1d9cddbb35b1
Revises: 76e3d0cf4a87
Create Date: 2020-09-27 18:31:20.432600

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1d9cddbb35b1'
down_revision = '76e3d0cf4a87'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('country',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_id'), 'country', ['id'], unique=False)
    op.create_table('club',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_club_id'), 'club', ['id'], unique=False)
    op.create_table('season',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('champ_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['champ_id'], ['champ.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_season_id'), 'season', ['id'], unique=False)
    op.create_table('footballer',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('birth_day', sa.Date(), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_footballer_id'), 'footballer', ['id'], unique=False)
    op.create_table('match',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('home_team_id', sa.Integer(), nullable=True),
    sa.Column('away_team_id', sa.Integer(), nullable=True),
    sa.Column('home_team_score', sa.Integer(), nullable=True),
    sa.Column('away_team_score', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('match_day', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_match_id'), 'match', ['id'], unique=False)
    op.create_index(op.f('ix_match_season_id'), 'match', ['season_id'], unique=False)
    op.create_table('table',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('games', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('draw', sa.Integer(), nullable=True),
    sa.Column('lose', sa.Integer(), nullable=True),
    sa.Column('goal_for', sa.Integer(), nullable=True),
    sa.Column('goal_against', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_table_id'), 'table', ['id'], unique=False)
    op.create_index(op.f('ix_table_points'), 'table', ['points'], unique=False)
    op.create_index(op.f('ix_table_season_id'), 'table', ['season_id'], unique=False)
    op.create_table('goal',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('footballer_id', sa.Integer(), nullable=True),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('minute', sa.Integer(), nullable=True),
    sa.Column('is_penalty', sa.Boolean(), nullable=True),
    sa.Column('is_autogoal', sa.Boolean(), nullable=True),
    sa.Column('assist_footballer_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['assist_footballer_id'], ['footballer.id'], ),
    sa.ForeignKeyConstraint(['club_id'], ['club.id'], ),
    sa.ForeignKeyConstraint(['footballer_id'], ['footballer.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['match.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_goal_assist_footballer_id'), 'goal', ['assist_footballer_id'], unique=False)
    op.create_index(op.f('ix_goal_footballer_id'), 'goal', ['footballer_id'], unique=False)
    op.create_index(op.f('ix_goal_id'), 'goal', ['id'], unique=False)
    op.create_index(op.f('ix_goal_match_id'), 'goal', ['match_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_goal_match_id'), table_name='goal')
    op.drop_index(op.f('ix_goal_id'), table_name='goal')
    op.drop_index(op.f('ix_goal_footballer_id'), table_name='goal')
    op.drop_index(op.f('ix_goal_assist_footballer_id'), table_name='goal')
    op.drop_table('goal')
    op.drop_index(op.f('ix_table_season_id'), table_name='table')
    op.drop_index(op.f('ix_table_points'), table_name='table')
    op.drop_index(op.f('ix_table_id'), table_name='table')
    op.drop_table('table')
    op.drop_index(op.f('ix_match_season_id'), table_name='match')
    op.drop_index(op.f('ix_match_id'), table_name='match')
    op.drop_table('match')
    op.drop_index(op.f('ix_footballer_id'), table_name='footballer')
    op.drop_table('footballer')
    op.drop_index(op.f('ix_season_id'), table_name='season')
    op.drop_table('season')
    op.drop_index(op.f('ix_club_id'), table_name='club')
    op.drop_table('club')
    op.drop_index(op.f('ix_country_id'), table_name='country')
    op.drop_table('country')
    # ### end Alembic commands ###
